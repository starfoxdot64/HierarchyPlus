name: Create Unity Package

on:
  push:
    tags:
      - 'v*'  # v1.0.0, v2.1.3 ...

jobs:
  build-package:
    name: Build Unity Package
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Prepare package structures
        run: |
          PACKAGES_PATH="Packages/com.rainy.${{ github.event.repository.name }}"
          ASSETS_PATH="Assets/_rainy/${{ github.event.repository.name }}"
          
          mkdir -p "$PACKAGES_PATH"
          mkdir -p "$ASSETS_PATH"
          
          rsync -av --exclude='.git' --exclude='.github' --exclude='.idea' --exclude='Packages' --exclude='Assets' --exclude='build' . "$PACKAGES_PATH/"
          rsync -av --exclude='.git' --exclude='.github' --exclude='.idea' --exclude='Packages' --exclude='Assets' --exclude='build' . "$ASSETS_PATH/"
          
          rm -f "$PACKAGES_PATH/README.md" "$PACKAGES_PATH/README.md.meta"
          rm -f "$PACKAGES_PATH/readme.md" "$PACKAGES_PATH/readme.md.meta"
          
          rm -f "$ASSETS_PATH/README.md" "$ASSETS_PATH/README.md.meta"
          rm -f "$ASSETS_PATH/readme.md" "$ASSETS_PATH/readme.md.meta"

      - name: Generate meta file lists
        run: |
          find Packages/ -name "*.meta" -type f > packagesMetaList
          find Assets/ -name "*.meta" -type f > assetsMetaList
          
          echo "=== Packages files to be packaged ==="
          cat packagesMetaList
          echo "=== Total packages files: $(wc -l < packagesMetaList) ==="
          
          echo "=== Assets files to be packaged ==="
          cat assetsMetaList
          echo "=== Total assets files: $(wc -l < assetsMetaList) ==="

      - name: Create output directory
        run: mkdir -p build

      - name: Create Unity Package
        uses: pCYSl5EDgo/create-unitypackage@master
        with:
          package-path: 'build/${{ github.event.repository.name }}-${{ github.ref_name }}.unitypackage'
          include-files: assetsMetaList

      - name: Create VPM ZIP
        run: |
          cd Packages/com.rainy.${{ github.event.repository.name }}
          zip -r "../../build/${{ github.event.repository.name }}-${{ github.ref_name }}-VPM.zip" .

      - name: Upload package artifacts
        uses: actions/upload-artifact@v4
        with:
          name: unity-packages-${{ github.ref_name }}
          path: build/*
          retention-days: 30

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: build/*
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
